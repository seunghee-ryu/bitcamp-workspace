package com.eomcs.basic.ex03;

//프로젝트 익스플로러에서 복사 붙여넣기를 하면 클래스 이름이 자동으로 맞춰진다.

//#문자 리터럴
public class Exam0410 {
  public static void main(String[] args) {
    // 자바는 문자를 메모리에 저장할 때 유니코드 규칙에 따라
    // 2바이트 코드로 저장한다.
    //  -'A' => 100_0001 = 0x0041
    //  -'B' => 100_0010 = 0x0042
    //  -'1' => 011_0001 = 0x0031
    //  -'2' => 011_0002 = 0x0032
    //  -'가' => 0xac00
    //  -'각' => 0xac01
    System.out.println('A');
    System.out.println('가');
    System.out.println("\u0041"); //유니코드값을 직접 지정
    System.out.println("\u4eba");
    
    System.out.println(0x41);
    System.out.println(65);
  }
}

//  문자를 메모리에 저장하려면
//  2진수로 바꿀 수 있어야 한다.
//  문자를 2진수로 바꾸는 규칙을
//  "문자집합(Character set)"이라고 한다.
//  문자 집합에는 여러 규칙이 있다.
//  그 중에는 
//  ASKII(7비트)
//      -영어 대소문자, 숫자, 특수문자 등
//          -'A' => 100_0001 = 0x41
//          -'B' => 100_0010 = 0x42
//          -'1' => 011_0001 = 0x31
//          -'2' => 011_0002 = 0x32
//          -한글은 정의되어 있지 않다.
//  ISO-8858-1(8비트)
//      -ASKII+유럽 문자
//  EUC-KR(KSC5601)(16비트)
//      -한글 2350자에 대한 규칙
//      -'가' => 10110000_10100001 = 0xb0a1
//      -'각' => 10110000_10100010 = 0xb0a2
//      -현대 통용되는 한글 음절 11172자를 모두 표현할 수 없다.
//  UNICODE(16비트)
//      -영어, 한글 모두 2바이트로 표현
//      -일반적으로 통용되는 대부분의 국가의 문자를 담고 있다.
//      -'A' => 100_0001 = 0x0041
//      -'B' => 100_0010 = 0x0042
//      -'1' => 011_0001 = 0x0031
//      -'2' => 011_0002 = 0x0032
//      -'가' => 0xac00
//      -'각' => 0xac01
//      -영어를 2바이트로 표현했기 때문에 비효율적이다.
//      -한글은 EUT-KR과 호환되지 않는다.
//  UTF-8(8~32비트)
//      -유니코드에 있는 문자를 규칙에 따라 1~4바이트로 변환한다.
//      -ISO-8859-1은 1바이트로 표현한다.
//          -'A' => 0x41
//          -'B' => 0x42
//          -'1' => 0x31
//          -'2' => 0x32
//      -한글 : 3바이트로 표현한다.
//          -'가' => 0xac00 (10101100_00000000)
//                => 1110xxxx 10xxxxx 10xxxxx (변환규칙)
//                => 11101010 10110000 `0000000 (규칙에 값 적용)
//                => 0xEAB080 (UTF-8)
//      -문자에 따라 바이트 크기가 다르다.
//      -기존의 ISO-8859-1은 1바이트로 표현한다.
//      -한글은 규칙에 따라 3바이트로 표현한다.

